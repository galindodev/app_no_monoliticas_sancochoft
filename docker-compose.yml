networks:
  pulsar:
    driver: bridge
  sidecar:
    driver: bridge
services:
# Start zookeeper
  zookeeper:
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: zookeeper
    restart: on-failure
    networks:
      - pulsar
    volumes:
      - ./data/zookeeper:/pulsar/data/zookeeper
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
             bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
             exec bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 10s
      timeout: 5s
      retries: 30

# Init cluster metadata
  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    networks:
      - pulsar
    command: bin/pulsar initialize-cluster-metadata --cluster cluster-a --zookeeper zookeeper:2181 --configuration-store zookeeper:2181 --web-service-url http://broker:8080 --broker-service-url pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy

# Start bookie
  bookie:
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: bookie
    restart: on-failure
    networks:
      - pulsar
    environment:
      - clusterName=cluster-a
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
    depends_on:
      zookeeper:
        condition: service_healthy
      pulsar-init:
        condition: service_completed_successfully
  # Map the local directory to the container to avoid bookie startup failure due to insufficient container disks.
    volumes:
      - ./data/bookkeeper:/pulsar/data/bookkeeper
    command: bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf
      && exec bin/pulsar bookie"

# Start broker
  broker:
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: broker
    hostname: broker
    restart: on-failure
    networks:
      - pulsar
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - zookeeperServers=zookeeper:2181
      - clusterName=cluster-a
      - managedLedgerDefaultEnsembleSize=1
      - managedLedgerDefaultWriteQuorum=1
      - managedLedgerDefaultAckQuorum=1
      - advertisedAddress=broker
      - advertisedListeners=external:pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy
      bookie:
        condition: service_started
    ports:
      - "6650:6650"
      - "8080:8080"
    command: bash -c "bin/apply-config-from-env.py conf/broker.conf
      &&  exec bin/pulsar broker"

  db_pagos:
    image: postgres:16
    container_name: db_pagos
    hostname: db_pagos
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db_pagos
      - POSTGRES_HOST=db_pagos
      - POSTGRES_PORT=5432
    volumes:
      - ./data/postgres/db_pagos:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    networks:
      - sidecar
    profiles: ["pagos", "monolito"]

  pagos:
    build:
      context: .
      dockerfile: pagos.Dockerfile
    container_name: pagos
    hostname: pagos
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db_pagos
      - POSTGRES_HOST=db_pagos
      - POSTGRES_PORT=5432
      - GUNICORN_CMD_ARGS=--log-level info --reload
      - BROKER_HOST=broker
    ports:
      - "5002:5000"
    depends_on:
      - db_pagos
    volumes:
      - ./pagos:/app/pagos
    networks:
      - sidecar
      - pulsar
    profiles: ["pagos", "monolito"]

  db_liquidaciones:
    image: postgres:16
    container_name: db_liquidaciones
    hostname: db_liquidaciones
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db_liquidaciones
      - POSTGRES_HOST=db_liquidaciones
      - POSTGRES_PORT=5432
    volumes:
      - ./data/postgres/db_liquidaciones:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - sidecar
    profiles: ["alpespartners", "liquidaciones"]

  liquidaciones:
    build:
      context: .
      dockerfile: liquidaciones.Dockerfile
    container_name: liquidaciones
    hostname: liquidaciones
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db_liquidaciones
      - POSTGRES_HOST=db_liquidaciones
      - POSTGRES_PORT=5432
      - BROKER_HOST=broker
      - FLASK_DEBUG=1
      - LOG_LEVEL=INFO
      - PASARELA_URL=http://alianzas_bff:5000/pasarela
    ports:
      - "5001:5000"
    depends_on:
      - db_liquidaciones
    volumes:
      - ./liquidaciones:/app/liquidaciones
    networks:
      - sidecar
      - pulsar
    profiles: ["liquidaciones", "monolito"]

  alianzas_bff:
    build:
      context: .
      dockerfile: alianzas_bff.Dockerfile
    container_name: alianzas_bff
    hostname: alianzas_bff
    environment:
      - GUNICORN_CMD_ARGS=--log-level info --reload
      - BROKER_HOST=broker
      - ATRIBUCIONES_HOST=atribuciones:5000
      - PAGOS_HOST=pagos:5000
    ports:
      - "5000:5000"
    volumes:
      - ./alianzas_bff:/app/alianzas_bff
    networks:
      - sidecar
      - pulsar
    profiles: ["alianzas_bff"]

  atribuciones:
    build:
      context: .
      dockerfile: atribuciones.Dockerfile
    container_name: atribuciones
    hostname: atribuciones
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db_atribuciones
      - POSTGRES_HOST=db_atribuciones
      - POSTGRES_PORT=5432
      - GUNICORN_CMD_ARGS=--log-level info --reload
      - BROKER_HOST=broker
    ports:
      - "5003:5000"
    depends_on:
      - db_atribuciones
    volumes:
      - ./atribuciones:/app/atribuciones
    networks:
      - sidecar
      - pulsar
    profiles: ["atribuciones"]

  db_atribuciones:
    image: postgres:16
    container_name: db_atribuciones
    hostname: db_atribuciones
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db_atribuciones
      - POSTGRES_HOST=db_atribuciones
      - POSTGRES_PORT=5432
    volumes:
      - ./data/postgres/db_atribuciones:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - sidecar
    profiles: ["alpespartners", "atribuciones"]
